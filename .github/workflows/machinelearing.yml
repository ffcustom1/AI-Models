name: CI

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Download ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive -Path ngrok.zip -DestinationPath .

    - name: Authenticate ngrok
      run: |
        .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable Remote Desktop
      run: |
        Write-Host "Enabling Remote Desktop..."
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        Write-Host "Remote Desktop enabled successfully."

    - name: Create batch file on desktop
      run: |
        $content = '@echo off
        setlocal
        echo Creating signal_file.txt... && echo. > C:\signal_file.txt && echo Signal file created successfully.
        pause
        endlocal'
        Set-Content -Path "$env:USERPROFILE\Desktop\create_signal_file.bat" -Value $content

    - name: List all drives and directories along with storage
      run: |
        Write-Host "Listing all drives and directories along with storage information..."
        
        # Get list of all drives and their storage details
        $drives = Get-WmiObject Win32_LogicalDisk | Select-Object DeviceID, MediaType, @{Name='Size(GB)'; Expression={[math]::round($_.Size / 1GB, 2)}}, @{Name='Free Space(GB)'; Expression={[math]::round($_.FreeSpace / 1GB, 2)}}
        
        $drives | ForEach-Object {
          Write-Host "Drive: $($_.DeviceID)"
          Write-Host "Media Type: $($_.MediaType)"
          Write-Host "Size: $($_.'Size(GB)') GB"
          Write-Host "Free Space: $($_.'Free Space(GB)') GB"
          Write-Host ""
        }

        # Get list of directories from the root of each drive
        foreach ($drive in $drives) {
          $driveLetter = $drive.DeviceID

    - name: Start ngrok tunnel and check for completion
      run: |
        Start-Process -NoNewWindow -FilePath .\ngrok.exe -ArgumentList 'tcp 3389'
        
        $signalFile = "C:\signal_file.txt"
        $ngrokRunning = $true

        while ($ngrokRunning) {
          if (-not $ngrokRunning) { break }

          if (-not (Test-Path $signalFile)) {
            Start-Sleep -Seconds 60
            continue
          }

          $ngrokRunning = $false
        }

        Write-Output "Completion signal received."


          Write-Host "Listing directories for drive: $driveLetter"
          Get-ChildItem "$driveLetter\" -Directory | ForEach-Object {
            Write-Host "Directory: $($_.FullName)"
          }
        }
