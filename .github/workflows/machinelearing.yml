name: WINCI

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download TightVNC
      run: |
        Write-Host "Downloading TightVNC..."
        Invoke-WebRequest -Uri "https://www.tightvnc.com/download/2.8.63/tightvnc-2.8.63-setup-64bit.msi" -OutFile "tightvnc.msi"
        Write-Host "TightVNC downloaded successfully."

    - name: Install TightVNC
      run: |
        Write-Host "Installing TightVNC..."
        Start-Process msiexec.exe -ArgumentList '/i tightvnc.msi /quiet /norestart ADDLOCAL=Server,Viewer' -Wait
        Write-Host "TightVNC installed successfully."

    - name: Configure TightVNC Server
      run: |
        Write-Host "Configuring TightVNC Server..."
        $password = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
        $viewOnlyPassword = ConvertTo-SecureString "ViewOnly123" -AsPlainText -Force

        Write-Host "Setting full access password..."
        & "C:\Program Files\TightVNC\tvnserver.exe" -controlservice -setpassword $password

        Write-Host "Setting view-only password..."
        & "C:\Program Files\TightVNC\tvnserver.exe" -controlservice -setviewonlypassword $viewOnlyPassword

        Write-Host "Starting TightVNC Service..."
        Start-Service -Name tvnserver
        Write-Host "TightVNC Service started successfully."

    - name: Retrieve TightVNC Connection Details
      run: |
        Write-Host "Retrieving connection details..."
        $ipAddress = (Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias Ethernet | Where-Object {$_.IPAddress -ne "127.0.0.1"}).IPAddress
        $port = 5900  # Default TightVNC port
        Write-Host "TightVNC is running at:"
        Write-Host "IP Address: $ipAddress"
        Write-Host "Port: $port"
        Write-Host "Full Access Password: P@ssw0rd!"
        Write-Host "View-Only Password: ViewOnly123"

    - name: Create batch file on desktop
      run: |
        Write-Host "Creating batch file to generate signal file..."
        $content = '@echo off
        setlocal
        echo Creating signal_file.txt... && echo. > C:\signal_file.txt && echo Signal file created successfully.
        pause
        endlocal'
        Set-Content -Path "$env:USERPROFILE\Desktop\create_signal_file.bat" -Value $content
        Write-Host "Batch file 'create_signal_file.bat' created successfully."

    - name: Wait for Signal File
      run: |
        Write-Host "Waiting for signal file..."
        $signalFile = "C:\signal_file.txt"
        $retryCount = 0
        $maxRetries = 10
        while (-not (Test-Path $signalFile)) {
          Write-Host "Signal file not found, waiting for 60 seconds..."
          Start-Sleep -Seconds 60
          $retryCount++
          if ($retryCount -ge $maxRetries) {
            Write-Host "Maximum retries reached. Signal file not found."
            exit 1
          }
        }
        Write-Host "Signal file detected. Workflow complete."
